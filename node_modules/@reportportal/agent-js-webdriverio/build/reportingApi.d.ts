import { RP_STATUSES } from '@reportportal/client-javascript/lib/constants/statuses';
import { Attachment, Attribute } from './models';
import { LOG_LEVELS } from './constants';
export declare const ReportingApi: {
    addAttributes: (attributes: Attribute[], suite?: string) => void;
    setDescription: (text: string, suite?: string) => void;
    setTestCaseId: (testCaseId: string, suite?: string) => void;
    setLaunchStatus: (status: RP_STATUSES) => void;
    setLaunchStatusPassed: () => void;
    setLaunchStatusFailed: () => void;
    setLaunchStatusSkipped: () => void;
    setLaunchStatusStopped: () => void;
    setLaunchStatusInterrupted: () => void;
    setLaunchStatusCancelled: () => void;
    setLaunchStatusInfo: () => void;
    setLaunchStatusWarn: () => void;
    setStatus: (status: RP_STATUSES, suite?: string) => void;
    setStatusPassed: (suite?: string) => void;
    setStatusFailed: (suite?: string) => void;
    setStatusSkipped: (suite?: string) => void;
    setStatusStopped: (suite?: string) => void;
    setStatusInterrupted: (suite?: string) => void;
    setStatusCancelled: (suite?: string) => void;
    setStatusInfo: (suite?: string) => void;
    setStatusWarn: (suite?: string) => void;
    log: (level: LOG_LEVELS, message: string, file?: Attachment, suite?: string) => void;
    trace: (message: string, file?: Attachment, suite?: string) => void;
    debug: (message: string, file?: Attachment, suite?: string) => void;
    info: (message: string, file?: Attachment, suite?: string) => void;
    warn: (message: string, file?: Attachment, suite?: string) => void;
    error: (message: string, file?: Attachment, suite?: string) => void;
    fatal: (message: string, file?: Attachment, suite?: string) => void;
    launchLog: (level: LOG_LEVELS, message: string, file?: Attachment) => void;
    launchTrace: (message: string, file?: Attachment) => void;
    launchDebug: (message: string, file?: Attachment) => void;
    launchInfo: (message: string, file?: Attachment) => void;
    launchWarn: (message: string, file?: Attachment) => void;
    launchError: (message: string, file?: Attachment) => void;
    launchFatal: (message: string, file?: Attachment) => void;
};
