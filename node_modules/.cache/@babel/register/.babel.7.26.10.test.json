{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\WDIO_Demo\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\WDIO_Demo\",\"filename\":\"D:\\\\WDIO_Demo\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\WDIO_Demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.26.10:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // The path of the spec files will be resolved relative from the directory of\n  // of the config file unless it's absolute.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/lighthouse-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'https://qa-my.innago.com/',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialize specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context, hookName) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n   * Gets executed when a refresh happens.\n   * @param {string} oldSessionId session ID of the old session\n   * @param {string} newSessionId session ID of the new session\n   */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n  /**\n   * Hook that gets executed before a WebdriverIO assertion happens.\n   * @param {object} params information about the assertion to be executed\n   */\n  // beforeAssertion: function(params) {\n  // }\n  /**\n   * Hook that gets executed after a WebdriverIO assertion happened.\n   * @param {object} params information about the assertion that was executed, including its results\n   */\n  // afterAssertion: function(params) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"D:\\WDIO_Demo\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n\t//\n\t// ====================\n\t// Runner Configuration\n\t// ====================\n\t// WebdriverIO supports running e2e tests as well as unit and component tests.\n\trunner: 'local',\n\t//\n\t// ==================\n\t// Specify Test Files\n\t// ==================\n\t// Define which test specs should run. The pattern is relative to the directory\n\t// of the configuration file being run.\n\t//\n\t// The specs are defined as an array of spec files (optionally using wildcards\n\t// that will be expanded). The test for each spec file will be run in a separate\n\t// worker process. In order to have a group of spec files run in the same worker\n\t// process simply enclose them in an array within the specs array.\n\t//\n\t// The path of the spec files will be resolved relative from the directory of\n\t// of the config file unless it's absolute.\n\t//\n\tspecs: ['./test/specs/**/*.js'],\n\t// Patterns to exclude.\n\texclude: [\n\t\t// 'path/to/excluded/files'\n\t],\n\t//\n\t// ============\n\t// Capabilities\n\t// ============\n\t// Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n\t// time. Depending on the number of capabilities, WebdriverIO launches several test\n\t// sessions. Within your capabilities you can overwrite the spec and exclude options in\n\t// order to group specific specs to a specific capability.\n\t//\n\t// First, you can define how many instances should be started at the same time. Let's\n\t// say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n\t// set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n\t// files and you set maxInstances to 10, all spec files will get tested at the same time\n\t// and 30 processes will get spawned. The property handles how many capabilities\n\t// from the same test should run tests.\n\t//\n\tmaxInstances: 10,\n\t//\n\t// If you have trouble getting all important capabilities together, check out the\n\t// Sauce Labs platform configurator - a great tool to configure your capabilities:\n\t// https://saucelabs.com/platform/platform-configurator\n\t//\n\tcapabilities: [\n\t\t{\n\t\t\t// capabilities for local browser web tests\n\t\t\tbrowserName: 'chrome', // or \"firefox\", \"microsoftedge\", \"safari\"\n\t\t},\n\t],\n\n\t//\n\t// ===================\n\t// Test Configurations\n\t// ===================\n\t// Define all options that are relevant for the WebdriverIO instance here\n\t//\n\t// Level of logging verbosity: trace | debug | info | warn | error | silent\n\tlogLevel: 'info',\n\t//\n\t// Set specific log levels per logger\n\t// loggers:\n\t// - webdriver, webdriverio\n\t// - @wdio/browserstack-service, @wdio/lighthouse-service, @wdio/sauce-service\n\t// - @wdio/mocha-framework, @wdio/jasmine-framework\n\t// - @wdio/local-runner\n\t// - @wdio/sumologic-reporter\n\t// - @wdio/cli, @wdio/config, @wdio/utils\n\t// Level of logging verbosity: trace | debug | info | warn | error | silent\n\t// logLevels: {\n\t//     webdriver: 'info',\n\t//     '@wdio/appium-service': 'info'\n\t// },\n\t//\n\t// If you only want to run your tests until a specific amount of tests have failed use\n\t// bail (default is 0 - don't bail, run all tests).\n\tbail: 0,\n\t//\n\t// Set a base URL in order to shorten url command calls. If your `url` parameter starts\n\t// with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n\t// If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n\t// gets prepended directly.\n\tbaseUrl: 'https://qa-my.innago.com/',\n\t//\n\t// Default timeout for all waitFor* commands.\n\twaitforTimeout: 10000,\n\t//\n\t// Default timeout in milliseconds for request\n\t// if browser driver or grid doesn't send response\n\tconnectionRetryTimeout: 120000,\n\t//\n\t// Default request retries count\n\tconnectionRetryCount: 3,\n\t//\n\t// Test runner services\n\t// Services take over a specific job you don't want to take care of. They enhance\n\t// your test setup with almost no effort. Unlike plugins, they don't add new\n\t// commands. Instead, they hook themselves up into the test process.\n\t// services: [],\n\t//\n\t// Framework you want to run your specs with.\n\t// The following are supported: Mocha, Jasmine, and Cucumber\n\t// see also: https://webdriver.io/docs/frameworks\n\t//\n\t// Make sure you have the wdio adapter package for the specific framework installed\n\t// before running any tests.\n\tframework: 'mocha',\n\n\t//\n\t// The number of times to retry the entire specfile when it fails as a whole\n\t// specFileRetries: 1,\n\t//\n\t// Delay in seconds between the spec file retry attempts\n\t// specFileRetriesDelay: 0,\n\t//\n\t// Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n\t// specFileRetriesDeferred: false,\n\t//\n\t// Test reporter for stdout.\n\t// The only one supported by default is 'dot'\n\t// see also: https://webdriver.io/docs/dot-reporter\n\treporters: ['spec'],\n\n\t// Options to be passed to Mocha.\n\t// See the full list at http://mochajs.org/\n\tmochaOpts: {\n\t\tui: 'bdd',\n\t\ttimeout: 60000,\n\t},\n\n\t//\n\t// =====\n\t// Hooks\n\t// =====\n\t// WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n\t// it and to build services around it. You can either apply a single function or an array of\n\t// methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n\t// resolved to continue.\n\t/**\n\t * Gets executed once before all workers get launched.\n\t * @param {object} config wdio configuration object\n\t * @param {Array.<Object>} capabilities list of capabilities details\n\t */\n\t// onPrepare: function (config, capabilities) {\n\t// },\n\t/**\n\t * Gets executed before a worker process is spawned and can be used to initialize specific service\n\t * for that worker as well as modify runtime environments in an async fashion.\n\t * @param  {string} cid      capability id (e.g 0-0)\n\t * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n\t * @param  {object} specs    specs to be run in the worker process\n\t * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n\t * @param  {object} execArgv list of string arguments passed to the worker process\n\t */\n\t// onWorkerStart: function (cid, caps, specs, args, execArgv) {\n\t// },\n\t/**\n\t * Gets executed just after a worker process has exited.\n\t * @param  {string} cid      capability id (e.g 0-0)\n\t * @param  {number} exitCode 0 - success, 1 - fail\n\t * @param  {object} specs    specs to be run in the worker process\n\t * @param  {number} retries  number of retries used\n\t */\n\t// onWorkerEnd: function (cid, exitCode, specs, retries) {\n\t// },\n\t/**\n\t * Gets executed just before initialising the webdriver session and test framework. It allows you\n\t * to manipulate configurations depending on the capability or spec.\n\t * @param {object} config wdio configuration object\n\t * @param {Array.<Object>} capabilities list of capabilities details\n\t * @param {Array.<String>} specs List of spec file paths that are to be run\n\t * @param {string} cid worker id (e.g. 0-0)\n\t */\n\t// beforeSession: function (config, capabilities, specs, cid) {\n\t// },\n\t/**\n\t * Gets executed before test execution begins. At this point you can access to all global\n\t * variables like `browser`. It is the perfect place to define custom commands.\n\t * @param {Array.<Object>} capabilities list of capabilities details\n\t * @param {Array.<String>} specs        List of spec file paths that are to be run\n\t * @param {object}         browser      instance of created browser/device session\n\t */\n\t// before: function (capabilities, specs) {\n\t// },\n\t/**\n\t * Runs before a WebdriverIO command gets executed.\n\t * @param {string} commandName hook command name\n\t * @param {Array} args arguments that command would receive\n\t */\n\t// beforeCommand: function (commandName, args) {\n\t// },\n\t/**\n\t * Hook that gets executed before the suite starts\n\t * @param {object} suite suite details\n\t */\n\t// beforeSuite: function (suite) {\n\t// },\n\t/**\n\t * Function to be executed before a test (in Mocha/Jasmine) starts.\n\t */\n\t// beforeTest: function (test, context) {\n\t// },\n\t/**\n\t * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n\t * beforeEach in Mocha)\n\t */\n\t// beforeHook: function (test, context, hookName) {\n\t// },\n\t/**\n\t * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n\t * afterEach in Mocha)\n\t */\n\t// afterHook: function (test, context, { error, result, duration, passed, retries }, hookName) {\n\t// },\n\t/**\n\t * Function to be executed after a test (in Mocha/Jasmine only)\n\t * @param {object}  test             test object\n\t * @param {object}  context          scope object the test was executed with\n\t * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n\t * @param {*}       result.result    return object of test function\n\t * @param {number}  result.duration  duration of test\n\t * @param {boolean} result.passed    true if test has passed, otherwise false\n\t * @param {object}  result.retries   information about spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n\t */\n\t// afterTest: function(test, context, { error, result, duration, passed, retries }) {\n\t// },\n\n\t/**\n\t * Hook that gets executed after the suite has ended\n\t * @param {object} suite suite details\n\t */\n\t// afterSuite: function (suite) {\n\t// },\n\t/**\n\t * Runs after a WebdriverIO command gets executed\n\t * @param {string} commandName hook command name\n\t * @param {Array} args arguments that command would receive\n\t * @param {number} result 0 - command success, 1 - command error\n\t * @param {object} error error object if any\n\t */\n\t// afterCommand: function (commandName, args, result, error) {\n\t// },\n\t/**\n\t * Gets executed after all tests are done. You still have access to all global variables from\n\t * the test.\n\t * @param {number} result 0 - test pass, 1 - test fail\n\t * @param {Array.<Object>} capabilities list of capabilities details\n\t * @param {Array.<String>} specs List of spec file paths that ran\n\t */\n\t// after: function (result, capabilities, specs) {\n\t// },\n\t/**\n\t * Gets executed right after terminating the webdriver session.\n\t * @param {object} config wdio configuration object\n\t * @param {Array.<Object>} capabilities list of capabilities details\n\t * @param {Array.<String>} specs List of spec file paths that ran\n\t */\n\t// afterSession: function (config, capabilities, specs) {\n\t// },\n\t/**\n\t * Gets executed after all workers got shut down and the process is about to exit. An error\n\t * thrown in the onComplete hook will result in the test run failing.\n\t * @param {object} exitCode 0 - success, 1 - fail\n\t * @param {object} config wdio configuration object\n\t * @param {Array.<Object>} capabilities list of capabilities details\n\t * @param {<Object>} results object containing test results\n\t */\n\t// onComplete: function(exitCode, config, capabilities, results) {\n\t// },\n\t/**\n\t * Gets executed when a refresh happens.\n\t * @param {string} oldSessionId session ID of the old session\n\t * @param {string} newSessionId session ID of the new session\n\t */\n\t// onReload: function(oldSessionId, newSessionId) {\n\t// }\n\t/**\n\t * Hook that gets executed before a WebdriverIO assertion happens.\n\t * @param {object} params information about the assertion to be executed\n\t */\n\t// beforeAssertion: function(params) {\n\t// }\n\t/**\n\t * Hook that gets executed after a WebdriverIO assertion happened.\n\t * @param {object} params information about the assertion that was executed, including its results\n\t */\n\t// afterAssertion: function(params) {\n\t// }\n};\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EAChB;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CAAC,sBAAsB,CAAC;EAC/B;EACAC,OAAO,EAAE;IACR;EAAA,CACA;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CACb;IACC;IACAC,WAAW,EAAE,QAAQ,CAAE;EACxB,CAAC,CACD;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,2BAA2B;EACpC;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAEnB;EACA;EACAC,SAAS,EAAE;IACVC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACV;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACD;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;EACC;EACA;EACA;AACD;AACA;EACC;EACA;EACA;AACD;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC;EACA;;EAEA;AACD;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;EACC;EACA;EACA;AACD;AACA;AACA;EACC;EACA;AACD,CAAC","ignoreList":[]}},"mtime":1744639550086},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\WDIO_Demo\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\WDIO_Demo\",\"filename\":\"D:\\\\WDIO_Demo\\\\test\\\\specs\\\\test.e2e.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\WDIO_Demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.26.10:test":{"value":{"code":"const {\n  expect\n} = require('@wdio/globals');\nconst LoginPage = require('../pageobjects/login.page');\nconst SecurePage = require('../pageobjects/secure.page');\ndescribe('My Login application', () => {\n  it('should login with valid credentials', async () => {\n    await LoginPage.open();\n    await LoginPage.login('tomsmith', 'SuperSecretPassword!');\n    await expect(SecurePage.flashAlert).toBeExisting();\n    await expect(SecurePage.flashAlert).toHaveText(expect.stringContaining('You logged into a secure area!'));\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBlY3QiLCJyZXF1aXJlIiwiTG9naW5QYWdlIiwiU2VjdXJlUGFnZSIsImRlc2NyaWJlIiwiaXQiLCJvcGVuIiwibG9naW4iLCJmbGFzaEFsZXJ0IiwidG9CZUV4aXN0aW5nIiwidG9IYXZlVGV4dCIsInN0cmluZ0NvbnRhaW5pbmciXSwic291cmNlUm9vdCI6IkQ6XFxXRElPX0RlbW9cXHRlc3RcXHNwZWNzXFwiLCJzb3VyY2VzIjpbInRlc3QuZTJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZXhwZWN0IH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcbmNvbnN0IExvZ2luUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL2xvZ2luLnBhZ2UnKVxuY29uc3QgU2VjdXJlUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL3NlY3VyZS5wYWdlJylcblxuZGVzY3JpYmUoJ015IExvZ2luIGFwcGxpY2F0aW9uJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgbG9naW4gd2l0aCB2YWxpZCBjcmVkZW50aWFscycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgTG9naW5QYWdlLm9wZW4oKVxuXG4gICAgICAgIGF3YWl0IExvZ2luUGFnZS5sb2dpbigndG9tc21pdGgnLCAnU3VwZXJTZWNyZXRQYXNzd29yZCEnKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0JlRXhpc3RpbmcoKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0hhdmVUZXh0KFxuICAgICAgICAgICAgZXhwZWN0LnN0cmluZ0NvbnRhaW5pbmcoJ1lvdSBsb2dnZWQgaW50byBhIHNlY3VyZSBhcmVhIScpKVxuICAgIH0pXG59KVxuXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDM0MsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDdEQsTUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsNEJBQTRCLENBQUM7QUFFeERHLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxNQUFNO0VBQ25DQyxFQUFFLENBQUMscUNBQXFDLEVBQUUsWUFBWTtJQUNsRCxNQUFNSCxTQUFTLENBQUNJLElBQUksQ0FBQyxDQUFDO0lBRXRCLE1BQU1KLFNBQVMsQ0FBQ0ssS0FBSyxDQUFDLFVBQVUsRUFBRSxzQkFBc0IsQ0FBQztJQUN6RCxNQUFNUCxNQUFNLENBQUNHLFVBQVUsQ0FBQ0ssVUFBVSxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQ2xELE1BQU1ULE1BQU0sQ0FBQ0csVUFBVSxDQUFDSyxVQUFVLENBQUMsQ0FBQ0UsVUFBVSxDQUMxQ1YsTUFBTSxDQUFDVyxnQkFBZ0IsQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO0VBQ2xFLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["expect","require","LoginPage","SecurePage","describe","it","open","login","flashAlert","toBeExisting","toHaveText","stringContaining"],"sourceRoot":"D:\\WDIO_Demo\\test\\specs\\","sources":["test.e2e.js"],"sourcesContent":["const { expect } = require('@wdio/globals')\nconst LoginPage = require('../pageobjects/login.page')\nconst SecurePage = require('../pageobjects/secure.page')\n\ndescribe('My Login application', () => {\n    it('should login with valid credentials', async () => {\n        await LoginPage.open()\n\n        await LoginPage.login('tomsmith', 'SuperSecretPassword!')\n        await expect(SecurePage.flashAlert).toBeExisting()\n        await expect(SecurePage.flashAlert).toHaveText(\n            expect.stringContaining('You logged into a secure area!'))\n    })\n})\n\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACtD,MAAME,UAAU,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAExDG,QAAQ,CAAC,sBAAsB,EAAE,MAAM;EACnCC,EAAE,CAAC,qCAAqC,EAAE,YAAY;IAClD,MAAMH,SAAS,CAACI,IAAI,CAAC,CAAC;IAEtB,MAAMJ,SAAS,CAACK,KAAK,CAAC,UAAU,EAAE,sBAAsB,CAAC;IACzD,MAAMP,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACC,YAAY,CAAC,CAAC;IAClD,MAAMT,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACE,UAAU,CAC1CV,MAAM,CAACW,gBAAgB,CAAC,gCAAgC,CAAC,CAAC;EAClE,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}},"mtime":1744461233496},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\WDIO_Demo\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\WDIO_Demo\",\"filename\":\"D:\\\\WDIO_Demo\\\\test\\\\pageobjects\\\\login.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\WDIO_Demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.26.10:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get inputUsername() {\n    return $('#username');\n  }\n  get inputPassword() {\n    return $('#password');\n  }\n  get btnSubmit() {\n    return $('button[type=\"submit\"]');\n  }\n\n  /**\n   * a method to encapsule automation code to interact with the page\n   * e.g. to login using username and password\n   */\n  async login(username, password) {\n    await this.inputUsername.setValue(username);\n    await this.inputPassword.setValue(password);\n    await this.btnSubmit.click();\n  }\n\n  /**\n   * overwrite specific options to adapt it to page object\n   */\n  open() {\n    return super.open('login');\n  }\n}\nmodule.exports = new LoginPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJMb2dpblBhZ2UiLCJpbnB1dFVzZXJuYW1lIiwiaW5wdXRQYXNzd29yZCIsImJ0blN1Ym1pdCIsImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInNldFZhbHVlIiwiY2xpY2siLCJvcGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRDpcXFdESU9fRGVtb1xcdGVzdFxccGFnZW9iamVjdHNcXCIsInNvdXJjZXMiOlsibG9naW4ucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7ICQgfSA9IHJlcXVpcmUoJ0B3ZGlvL2dsb2JhbHMnKVxuY29uc3QgUGFnZSA9IHJlcXVpcmUoJy4vcGFnZScpO1xuXG4vKipcbiAqIHN1YiBwYWdlIGNvbnRhaW5pbmcgc3BlY2lmaWMgc2VsZWN0b3JzIGFuZCBtZXRob2RzIGZvciBhIHNwZWNpZmljIHBhZ2VcbiAqL1xuY2xhc3MgTG9naW5QYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBpbnB1dFVzZXJuYW1lICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyN1c2VybmFtZScpO1xuICAgIH1cblxuICAgIGdldCBpbnB1dFBhc3N3b3JkICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNwYXNzd29yZCcpO1xuICAgIH1cblxuICAgIGdldCBidG5TdWJtaXQgKCkge1xuICAgICAgICByZXR1cm4gJCgnYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhIG1ldGhvZCB0byBlbmNhcHN1bGUgYXV0b21hdGlvbiBjb2RlIHRvIGludGVyYWN0IHdpdGggdGhlIHBhZ2VcbiAgICAgKiBlLmcuIHRvIGxvZ2luIHVzaW5nIHVzZXJuYW1lIGFuZCBwYXNzd29yZFxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFVzZXJuYW1lLnNldFZhbHVlKHVzZXJuYW1lKTtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFBhc3N3b3JkLnNldFZhbHVlKHBhc3N3b3JkKTtcbiAgICAgICAgYXdhaXQgdGhpcy5idG5TdWJtaXQuY2xpY2soKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBvdmVyd3JpdGUgc3BlY2lmaWMgb3B0aW9ucyB0byBhZGFwdCBpdCB0byBwYWdlIG9iamVjdFxuICAgICAqL1xuICAgIG9wZW4gKCkge1xuICAgICAgICByZXR1cm4gc3VwZXIub3BlbignbG9naW4nKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IExvZ2luUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsU0FBUyxTQUFTRCxJQUFJLENBQUM7RUFDekI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsYUFBYUEsQ0FBQSxFQUFJO0lBQ2pCLE9BQU9KLENBQUMsQ0FBQyxXQUFXLENBQUM7RUFDekI7RUFFQSxJQUFJSyxhQUFhQSxDQUFBLEVBQUk7SUFDakIsT0FBT0wsQ0FBQyxDQUFDLFdBQVcsQ0FBQztFQUN6QjtFQUVBLElBQUlNLFNBQVNBLENBQUEsRUFBSTtJQUNiLE9BQU9OLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQztFQUNyQzs7RUFFQTtBQUNKO0FBQ0E7QUFDQTtFQUNJLE1BQU1PLEtBQUtBLENBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFO0lBQzdCLE1BQU0sSUFBSSxDQUFDTCxhQUFhLENBQUNNLFFBQVEsQ0FBQ0YsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxhQUFhLENBQUNLLFFBQVEsQ0FBQ0QsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxTQUFTLENBQUNLLEtBQUssQ0FBQyxDQUFDO0VBQ2hDOztFQUVBO0FBQ0o7QUFDQTtFQUNJQyxJQUFJQSxDQUFBLEVBQUk7SUFDSixPQUFPLEtBQUssQ0FBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQztFQUM5QjtBQUNKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlYLFNBQVMsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["$","require","Page","LoginPage","inputUsername","inputPassword","btnSubmit","login","username","password","setValue","click","open","module","exports"],"sourceRoot":"D:\\WDIO_Demo\\test\\pageobjects\\","sources":["login.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get inputUsername () {\n        return $('#username');\n    }\n\n    get inputPassword () {\n        return $('#password');\n    }\n\n    get btnSubmit () {\n        return $('button[type=\"submit\"]');\n    }\n\n    /**\n     * a method to encapsule automation code to interact with the page\n     * e.g. to login using username and password\n     */\n    async login (username, password) {\n        await this.inputUsername.setValue(username);\n        await this.inputPassword.setValue(password);\n        await this.btnSubmit.click();\n    }\n\n    /**\n     * overwrite specific options to adapt it to page object\n     */\n    open () {\n        return super.open('login');\n    }\n}\n\nmodule.exports = new LoginPage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,SAAS,SAASD,IAAI,CAAC;EACzB;AACJ;AACA;EACI,IAAIE,aAAaA,CAAA,EAAI;IACjB,OAAOJ,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIK,aAAaA,CAAA,EAAI;IACjB,OAAOL,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIM,SAASA,CAAA,EAAI;IACb,OAAON,CAAC,CAAC,uBAAuB,CAAC;EACrC;;EAEA;AACJ;AACA;AACA;EACI,MAAMO,KAAKA,CAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC7B,MAAM,IAAI,CAACL,aAAa,CAACM,QAAQ,CAACF,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,aAAa,CAACK,QAAQ,CAACD,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,SAAS,CAACK,KAAK,CAAC,CAAC;EAChC;;EAEA;AACJ;AACA;EACIC,IAAIA,CAAA,EAAI;IACJ,OAAO,KAAK,CAACA,IAAI,CAAC,OAAO,CAAC;EAC9B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIX,SAAS,CAAC,CAAC","ignoreList":[]}},"mtime":1744461233496},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\WDIO_Demo\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\WDIO_Demo\",\"filename\":\"D:\\\\WDIO_Demo\\\\test\\\\pageobjects\\\\page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\WDIO_Demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.26.10:test":{"value":{"code":"const {\n  browser\n} = require('@wdio/globals');\n\n/**\n * main page object containing all methods, selectors and functionality\n * that is shared across all page objects\n */\nmodule.exports = class Page {\n  /**\n   * Opens a sub page of the page\n   * @param path path of the sub page (e.g. /path/to/page.html)\n   */\n  open(path) {\n    return browser.url(`https://qa-my.innago.com/${path}`);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJQYWdlIiwib3BlbiIsInBhdGgiLCJ1cmwiXSwic291cmNlUm9vdCI6IkQ6XFxXRElPX0RlbW9cXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBicm93c2VyIH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJyk7XG5cbi8qKlxuICogbWFpbiBwYWdlIG9iamVjdCBjb250YWluaW5nIGFsbCBtZXRob2RzLCBzZWxlY3RvcnMgYW5kIGZ1bmN0aW9uYWxpdHlcbiAqIHRoYXQgaXMgc2hhcmVkIGFjcm9zcyBhbGwgcGFnZSBvYmplY3RzXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgUGFnZSB7XG5cdC8qKlxuXHQgKiBPcGVucyBhIHN1YiBwYWdlIG9mIHRoZSBwYWdlXG5cdCAqIEBwYXJhbSBwYXRoIHBhdGggb2YgdGhlIHN1YiBwYWdlIChlLmcuIC9wYXRoL3RvL3BhZ2UuaHRtbClcblx0ICovXG5cdG9wZW4ocGF0aCkge1xuXHRcdHJldHVybiBicm93c2VyLnVybChgaHR0cHM6Ly9xYS1teS5pbm5hZ28uY29tLyR7cGF0aH1gKTtcblx0fVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFRLENBQUMsR0FBR0MsT0FBTyxDQUFDLGVBQWUsQ0FBQzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsTUFBTUMsSUFBSSxDQUFDO0VBQzNCO0FBQ0Q7QUFDQTtBQUNBO0VBQ0NDLElBQUlBLENBQUNDLElBQUksRUFBRTtJQUNWLE9BQU9OLE9BQU8sQ0FBQ08sR0FBRyxDQUFDLDRCQUE0QkQsSUFBSSxFQUFFLENBQUM7RUFDdkQ7QUFDRCxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["browser","require","module","exports","Page","open","path","url"],"sourceRoot":"D:\\WDIO_Demo\\test\\pageobjects\\","sources":["page.js"],"sourcesContent":["const { browser } = require('@wdio/globals');\n\n/**\n * main page object containing all methods, selectors and functionality\n * that is shared across all page objects\n */\nmodule.exports = class Page {\n\t/**\n\t * Opens a sub page of the page\n\t * @param path path of the sub page (e.g. /path/to/page.html)\n\t */\n\topen(path) {\n\t\treturn browser.url(`https://qa-my.innago.com/${path}`);\n\t}\n};\n"],"mappings":"AAAA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,IAAI,CAAC;EAC3B;AACD;AACA;AACA;EACCC,IAAIA,CAACC,IAAI,EAAE;IACV,OAAON,OAAO,CAACO,GAAG,CAAC,4BAA4BD,IAAI,EAAE,CAAC;EACvD;AACD,CAAC","ignoreList":[]}},"mtime":1744520652924},"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\WDIO_Demo\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"D:\\\\WDIO_Demo\",\"filename\":\"D:\\\\WDIO_Demo\\\\test\\\\pageobjects\\\\secure.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"D:\\\\WDIO_Demo\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.26.10:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get flashAlert() {\n    return $('#flash');\n  }\n}\nmodule.exports = new SecurePage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJTZWN1cmVQYWdlIiwiZmxhc2hBbGVydCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkQ6XFxXRElPX0RlbW9cXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInNlY3VyZS5wYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgJCB9ID0gcmVxdWlyZSgnQHdkaW8vZ2xvYmFscycpXG5jb25zdCBQYWdlID0gcmVxdWlyZSgnLi9wYWdlJyk7XG5cbi8qKlxuICogc3ViIHBhZ2UgY29udGFpbmluZyBzcGVjaWZpYyBzZWxlY3RvcnMgYW5kIG1ldGhvZHMgZm9yIGEgc3BlY2lmaWMgcGFnZVxuICovXG5jbGFzcyBTZWN1cmVQYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBmbGFzaEFsZXJ0ICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNmbGFzaCcpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU2VjdXJlUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsVUFBVSxTQUFTRCxJQUFJLENBQUM7RUFDMUI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsVUFBVUEsQ0FBQSxFQUFJO0lBQ2QsT0FBT0osQ0FBQyxDQUFDLFFBQVEsQ0FBQztFQUN0QjtBQUNKO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlILFVBQVUsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["$","require","Page","SecurePage","flashAlert","module","exports"],"sourceRoot":"D:\\WDIO_Demo\\test\\pageobjects\\","sources":["secure.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get flashAlert () {\n        return $('#flash');\n    }\n}\n\nmodule.exports = new SecurePage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,UAAU,SAASD,IAAI,CAAC;EAC1B;AACJ;AACA;EACI,IAAIE,UAAUA,CAAA,EAAI;IACd,OAAOJ,CAAC,CAAC,QAAQ,CAAC;EACtB;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAG,IAAIH,UAAU,CAAC,CAAC","ignoreList":[]}},"mtime":1744461233496}}